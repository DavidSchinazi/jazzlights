name: Build and Deploy GitHub Pages

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            ~/.platformio/.cache
          key: ${{ runner.os }}-pio
      - uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - name: Install Python Dependencies
        run: pip install --upgrade platformio beautifulsoup4 lxml
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.3"
      - name: Install Kramdown
        run: gem install kramdown
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Create Temporary Site Directory
        run: |
          mkdir -p "${{ runner.temp }}/site-upload"
          echo "upload_dir=${{ runner.temp }}/site-upload" >> "$GITHUB_ENV"
      - name: Create Top-level index.html
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          url=$(gh api "repos/$GITHUB_REPOSITORY/pages" --jq '.html_url')
          extras/site/create-html.py --template extras/site/template.html --markdown README.md --url $url --output "${upload_dir}/index.html"
      - name: Copy Images
        run: cp -R extras/docs/images "${upload_dir}/"
      - name: Copy Static Files to Flash Folder
        run: |
          mkdir -p "${upload_dir}/flash/esp-web-tools"
          cp -R extras/site/flash/esp-web-tools/*.js "${upload_dir}/flash/esp-web-tools/"
          cp extras/site/flash/index.html "${upload_dir}/flash/"
          cp extras/site/style.css "${upload_dir}/"
          extras/site/flash/manifest.py --output "${upload_dir}/flash/manifest.json" --name "JazzLights Vest" --version $(git rev-parse --short "$GITHUB_SHA") --firmware vest.bin
      - name: PlatformIO Build Merged Binary
        run: MERGED_BIN_PATH="${upload_dir}/flash/vest.bin" pio run -t mergebin -e vest
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "${{ runner.temp }}/site-upload"
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
